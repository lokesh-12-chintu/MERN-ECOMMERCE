{"ast":null,"code":"import axios from \"../helpers/axios\";\nimport { categoryConstants } from \"./constants\";\nexport const getAllCategory = () => {\n  return async dispatch => {\n    dispatch({\n      type: categoryConstants.GET_ALL_CATEGORIES_REQUEST\n    });\n    const res = await axios.get(`category/getcategory`);\n    console.log(res);\n    if (res.status === 200) {\n      const {\n        categoryList\n      } = res.data;\n      dispatch({\n        type: categoryConstants.GET_ALL_CATEGORIES_SUCCESS,\n        payload: {\n          categories: categoryList\n        }\n      });\n    } else {\n      dispatch({\n        type: categoryConstants.GET_ALL_CATEGORIES_FAILURE,\n        payload: {\n          error: res.data.error\n        }\n      });\n    }\n  };\n};\nexport const addCategory = form => {\n  return async dispatch => {\n    dispatch({\n      type: categoryConstansts.ADD_NEW_CATEGORY_REQUEST\n    });\n    try {\n      const res = await axios.post(`/category/create`, form);\n      console.log(res);\n      if (res.status === 201) {\n        dispatch({\n          type: categoryConstansts.ADD_NEW_CATEGORY_SUCCESS,\n          payload: {\n            category: res.data.category\n          }\n        });\n      } else {\n        dispatch({\n          type: categoryConstansts.ADD_NEW_CATEGORY_FAILURE,\n          payload: res.data.error\n        });\n      }\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n};","map":{"version":3,"names":["axios","categoryConstants","getAllCategory","dispatch","type","GET_ALL_CATEGORIES_REQUEST","res","get","console","log","status","categoryList","data","GET_ALL_CATEGORIES_SUCCESS","payload","categories","GET_ALL_CATEGORIES_FAILURE","error","addCategory","form","categoryConstansts","ADD_NEW_CATEGORY_REQUEST","post","ADD_NEW_CATEGORY_SUCCESS","category","ADD_NEW_CATEGORY_FAILURE","response"],"sources":["C:/Users/jitta/MERN-ECOMMERCE/flipkart-clone/src/actions/category.action.js"],"sourcesContent":["import axios from \"../helpers/axios\";\r\nimport { categoryConstants } from \"./constants\";\r\n\r\n\r\nexport const getAllCategory = () => {\r\n    return async dispatch => {\r\n        dispatch({ type: categoryConstants.GET_ALL_CATEGORIES_REQUEST });\r\n        const res = await axios.get(`category/getcategory`);\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n            const { categoryList } = res.data;\r\n            dispatch({\r\n                type: categoryConstants.GET_ALL_CATEGORIES_SUCCESS,\r\n                payload: { categories: categoryList }\r\n            });\r\n        }else {\r\n            dispatch({\r\n                type: categoryConstants.GET_ALL_CATEGORIES_FAILURE,\r\n                payload: { error: res.data.error }\r\n            });\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const addCategory = (form) => {\r\n    return async dispatch => {\r\n        dispatch({ type: categoryConstansts.ADD_NEW_CATEGORY_REQUEST });\r\n        try {\r\n            const res = await axios.post(`/category/create`, form);\r\n            console.log(res)\r\n            if (res.status === 201) {\r\n                dispatch({\r\n                    type: categoryConstansts.ADD_NEW_CATEGORY_SUCCESS,\r\n                    payload: { category: res.data.category }\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: categoryConstansts.ADD_NEW_CATEGORY_FAILURE,\r\n                    payload: res.data.error\r\n                });\r\n            }\r\n        } catch (error) {   \r\n            console.log(error.response);\r\n        }\r\n\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,kBAAkB;AACpC,SAASC,iBAAiB,QAAQ,aAAa;AAG/C,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAChC,OAAO,MAAMC,QAAQ,IAAI;IACrBA,QAAQ,CAAC;MAAEC,IAAI,EAAEH,iBAAiB,CAACI;IAA2B,CAAC,CAAC;IAChE,MAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAE,sBAAqB,CAAC;IACnDC,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;IAChB,IAAIA,GAAG,CAACI,MAAM,KAAK,GAAG,EAAE;MACpB,MAAM;QAAEC;MAAa,CAAC,GAAGL,GAAG,CAACM,IAAI;MACjCT,QAAQ,CAAC;QACLC,IAAI,EAAEH,iBAAiB,CAACY,0BAA0B;QAClDC,OAAO,EAAE;UAAEC,UAAU,EAAEJ;QAAa;MACxC,CAAC,CAAC;IACN,CAAC,MAAK;MACFR,QAAQ,CAAC;QACLC,IAAI,EAAEH,iBAAiB,CAACe,0BAA0B;QAClDF,OAAO,EAAE;UAAEG,KAAK,EAAEX,GAAG,CAACM,IAAI,CAACK;QAAM;MACrC,CAAC,CAAC;IACN;EAEJ,CAAC;AACL,CAAC;AAID,OAAO,MAAMC,WAAW,GAAIC,IAAI,IAAK;EACjC,OAAO,MAAMhB,QAAQ,IAAI;IACrBA,QAAQ,CAAC;MAAEC,IAAI,EAAEgB,kBAAkB,CAACC;IAAyB,CAAC,CAAC;IAC/D,IAAI;MACA,MAAMf,GAAG,GAAG,MAAMN,KAAK,CAACsB,IAAI,CAAE,kBAAiB,EAAEH,IAAI,CAAC;MACtDX,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;MAChB,IAAIA,GAAG,CAACI,MAAM,KAAK,GAAG,EAAE;QACpBP,QAAQ,CAAC;UACLC,IAAI,EAAEgB,kBAAkB,CAACG,wBAAwB;UACjDT,OAAO,EAAE;YAAEU,QAAQ,EAAElB,GAAG,CAACM,IAAI,CAACY;UAAS;QAC3C,CAAC,CAAC;MACN,CAAC,MAAM;QACHrB,QAAQ,CAAC;UACLC,IAAI,EAAEgB,kBAAkB,CAACK,wBAAwB;UACjDX,OAAO,EAAER,GAAG,CAACM,IAAI,CAACK;QACtB,CAAC,CAAC;MACN;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAACS,QAAQ,CAAC;IAC/B;EAEJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}