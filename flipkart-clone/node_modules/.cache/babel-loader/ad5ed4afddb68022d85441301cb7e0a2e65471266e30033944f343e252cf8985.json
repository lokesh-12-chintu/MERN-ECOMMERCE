{"ast":null,"code":"import { authConstants } from \"./constants\";\nimport axios from \"../helpers/axios\";\nexport const login = user => {\n  console.log(user);\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGIN_REQUEST\n    });\n    const res = await axios.post('/admin/signin', {\n      ...user\n    });\n    if (res.status === 200) {\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: authConstants.LOGIN_FAILURE,\n          payload: {\n            error: res.data.error\n          }\n        });\n      }\n    }\n  };\n};\nexport const isUserLoggedIn = () => {\n  return async dispatch => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const user = JSON.parse(localStorage.getItem('user'));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      dispatch({\n        type: authConstants.LOGIN_FAILURE,\n        payload: {\n          error: 'Failed to login'\n        }\n      });\n    }\n  };\n};\nexport const signout = () => {\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGOUT_REQUEST\n    });\n    const res = await axios.post(`/admin/signout`);\n    if (res.status === 200) {\n      localStorage.clear();\n      dispatch({\n        type: authConstants.LOGOUT_SUCCESS\n      });\n    } else {\n      dispatch({\n        type: authConstants.LOGOUT_FAILURE,\n        payload: {\n          error: res.data.error\n        }\n      });\n    }\n  };\n};","map":{"version":3,"names":["authConstants","axios","login","user","console","log","dispatch","type","LOGIN_REQUEST","res","post","status","token","data","localStorage","setItem","JSON","stringify","LOGIN_SUCCESS","payload","LOGIN_FAILURE","error","isUserLoggedIn","getItem","parse","signout","LOGOUT_REQUEST","clear","LOGOUT_SUCCESS","LOGOUT_FAILURE"],"sources":["C:/Users/jitta/MERN-ECOMMERCE/flipkart-clone/src/actions/auth.action.js"],"sourcesContent":["import {authConstants} from \"./constants\";\r\nimport axios from \"../helpers/axios\"\r\n\r\nexport const login = (user) => {\r\n   \r\n    console.log(user)\r\n \r\n    return async(dispatch) => {\r\n        dispatch({type:authConstants.LOGIN_REQUEST})\r\n        const res = await axios.post('/admin/signin',{\r\n                ...user\r\n        }) \r\n        if(res.status === 200){\r\n            const {token,user} = res.data;\r\n            localStorage.setItem('token',token);\r\n            localStorage.setItem('user',JSON.stringify(user))\r\n            dispatch({\r\n                type:authConstants.LOGIN_SUCCESS,\r\n                payload:{\r\n                    token,user\r\n                }\r\n            })\r\n        }else{\r\n            if(res.status === 400){\r\n                dispatch({\r\n                    type:authConstants.LOGIN_FAILURE,\r\n                    payload:{error:res.data.error}\r\n                })\r\n            }\r\n        }\r\n    } \r\n}\r\n\r\nexport const isUserLoggedIn = () => {\r\n    return async dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(token) {\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            dispatch({\r\n                type:authConstants.LOGIN_SUCCESS,\r\n                payload:{\r\n                    token,user\r\n                }\r\n            })\r\n            \r\n        }else{\r\n            dispatch({\r\n                type:authConstants.LOGIN_FAILURE,\r\n                payload:{error:'Failed to login'}\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const signout = () => {\r\n    return async dispatch => {\r\n        dispatch({type:authConstants.LOGOUT_REQUEST})\r\n        const res = await axios.post(`/admin/signout`); \r\n        if(res.status === 200){\r\n            localStorage.clear();\r\n            dispatch({type:authConstants.LOGOUT_SUCCESS}); \r\n        }else{\r\n            dispatch({\r\n                type:authConstants.LOGOUT_FAILURE, \r\n                payload:{error:res.data.error}\r\n            })\r\n        }\r\n    }\r\n}"],"mappings":"AAAA,SAAQA,aAAa,QAAO,aAAa;AACzC,OAAOC,KAAK,MAAM,kBAAkB;AAEpC,OAAO,MAAMC,KAAK,GAAIC,IAAI,IAAK;EAE3BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EAEjB,OAAO,MAAMG,QAAQ,IAAK;IACtBA,QAAQ,CAAC;MAACC,IAAI,EAACP,aAAa,CAACQ;IAAa,CAAC,CAAC;IAC5C,MAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,eAAe,EAAC;MACrC,GAAGP;IACX,CAAC,CAAC;IACF,IAAGM,GAAG,CAACE,MAAM,KAAK,GAAG,EAAC;MAClB,MAAM;QAACC,KAAK;QAACT;MAAI,CAAC,GAAGM,GAAG,CAACI,IAAI;MAC7BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAACH,KAAK,CAAC;MACnCE,YAAY,CAACC,OAAO,CAAC,MAAM,EAACC,IAAI,CAACC,SAAS,CAACd,IAAI,CAAC,CAAC;MACjDG,QAAQ,CAAC;QACLC,IAAI,EAACP,aAAa,CAACkB,aAAa;QAChCC,OAAO,EAAC;UACJP,KAAK;UAACT;QACV;MACJ,CAAC,CAAC;IACN,CAAC,MAAI;MACD,IAAGM,GAAG,CAACE,MAAM,KAAK,GAAG,EAAC;QAClBL,QAAQ,CAAC;UACLC,IAAI,EAACP,aAAa,CAACoB,aAAa;UAChCD,OAAO,EAAC;YAACE,KAAK,EAACZ,GAAG,CAACI,IAAI,CAACQ;UAAK;QACjC,CAAC,CAAC;MACN;IACJ;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAChC,OAAO,MAAMhB,QAAQ,IAAI;IACrB,MAAMM,KAAK,GAAGE,YAAY,CAACS,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAGX,KAAK,EAAE;MACN,MAAMT,IAAI,GAAGa,IAAI,CAACQ,KAAK,CAACV,YAAY,CAACS,OAAO,CAAC,MAAM,CAAC,CAAC;MACrDjB,QAAQ,CAAC;QACLC,IAAI,EAACP,aAAa,CAACkB,aAAa;QAChCC,OAAO,EAAC;UACJP,KAAK;UAACT;QACV;MACJ,CAAC,CAAC;IAEN,CAAC,MAAI;MACDG,QAAQ,CAAC;QACLC,IAAI,EAACP,aAAa,CAACoB,aAAa;QAChCD,OAAO,EAAC;UAACE,KAAK,EAAC;QAAiB;MACpC,CAAC,CAAC;IACN;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMI,OAAO,GAAGA,CAAA,KAAM;EACzB,OAAO,MAAMnB,QAAQ,IAAI;IACrBA,QAAQ,CAAC;MAACC,IAAI,EAACP,aAAa,CAAC0B;IAAc,CAAC,CAAC;IAC7C,MAAMjB,GAAG,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAE,gBAAe,CAAC;IAC9C,IAAGD,GAAG,CAACE,MAAM,KAAK,GAAG,EAAC;MAClBG,YAAY,CAACa,KAAK,CAAC,CAAC;MACpBrB,QAAQ,CAAC;QAACC,IAAI,EAACP,aAAa,CAAC4B;MAAc,CAAC,CAAC;IACjD,CAAC,MAAI;MACDtB,QAAQ,CAAC;QACLC,IAAI,EAACP,aAAa,CAAC6B,cAAc;QACjCV,OAAO,EAAC;UAACE,KAAK,EAACZ,GAAG,CAACI,IAAI,CAACQ;QAAK;MACjC,CAAC,CAAC;IACN;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}