{"ast":null,"code":"import axios from \"../helpers/axios\";\nimport { cartConstants } from \"./constants\";\nimport store from \"../store\";\nconst getCartItems = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: cartConstants.ADD_TO_CART_REQUEST\n      });\n      const res = await axios.post(`/user/getCartItems`);\n      if (res.status === 200) {\n        const {\n          cartItems\n        } = res.data;\n        console.log({\n          getCartItems: cartItems\n        });\n        if (cartItems) {\n          dispatch({\n            type: cartConstants.ADD_TO_CART_SUCCESS,\n            payload: {\n              cartItems\n            }\n          });\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\n/* export const addToCart = (product, newQty = 1) => {\r\n  return async (dispatch) => {\r\n    const {\r\n      cart: { cartItems },\r\n      auth,\r\n    } = store.getState();\r\n    //console.log('action::products', products);\r\n    //const product = action.payload.product;\r\n    //const products = state.products;\r\n    const qty = cartItems[product._id]\r\n      ? parseInt(cartItems[product._id].qty + newQty)\r\n      : 1;\r\n    cartItems[product._id] = {\r\n      ...product,\r\n      qty,\r\n    };\r\n\r\n    if (auth.authenticate) {\r\n      dispatch({ type: cartConstants.ADD_TO_CART_REQUEST });\r\n      const payload = {\r\n        // cartItems: Object.keys(cartItems).map((key, index) => {\r\n        //     return {\r\n        //         quantity: cartItems[key].qty,\r\n        //         product: cartItems[key]._id\r\n        //     }\r\n        // })\r\n        cartItems: [\r\n          {\r\n            product: product._id,\r\n            quantity: qty,\r\n          },\r\n        ],\r\n      };\r\n      console.log(payload);\r\n      const res = await axios.post(`/user/cart/addtocart`, payload);\r\n      console.log(res);\r\n      if (res.status === 201) {\r\n        dispatch(getCartItems());\r\n      }\r\n    } else {\r\n      localStorage.setItem(\"cart\", JSON.stringify(cartItems));\r\n    }\r\n\r\n    console.log(\"addToCart::\", cartItems);\r\n\r\n    dispatch({\r\n      type: cartConstants.ADD_TO_CART_SUCCESS,\r\n      payload: { cartItems },\r\n    });\r\n  };\r\n};\r\n */\n\nexport const removeCartItem = payload => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: cartConstants.REMOVE_CART_ITEM_REQUEST\n      });\n      const res = await axios.post(`/user/cart/removeItem`, {\n        payload\n      });\n      if (res.status === 202) {\n        dispatch({\n          type: cartConstants.REMOVE_CART_ITEM_SUCCESS\n        });\n        dispatch(getCartItems());\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: cartConstants.REMOVE_CART_ITEM_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const addToCart = product => {\n  return async dispatch => {\n    const {\n      cartItems\n    } = store.getState().cart;\n    const qty = cartItems[product._id] ? parseInt(cartItems[product._id].qty + newQty) : 1;\n    cartItems[product._id] = {\n      ...product,\n      qty\n    };\n    dispatch({\n      type: cartConstants.ADD_TO_CART,\n      payload: {\n        cartItems: {\n          [product._id]: product\n        }\n      }\n    });\n  };\n};\nexport const updateCart = () => {\n  return async dispatch => {\n    const {\n      auth\n    } = store.getState();\n    let cartItems = localStorage.getItem(\"cart\") ? JSON.parse(localStorage.getItem(\"cart\")) : null;\n    console.log(\"upppppppppp\");\n    if (auth.authenticate) {\n      localStorage.removeItem(\"cart\");\n      //dispatch(getCartItems());\n      if (cartItems) {\n        const payload = {\n          cartItems: Object.keys(cartItems).map((key, index) => {\n            return {\n              quantity: cartItems[key].qty,\n              product: cartItems[key]._id\n            };\n          })\n        };\n        if (Object.keys(cartItems).length > 0) {\n          const res = await axios.post(`/user/cart/addtocart`, payload);\n          if (res.status === 201) {\n            dispatch(getCartItems());\n          }\n        }\n      } else {\n        dispatch(getCartItems());\n      }\n    } else {\n      if (cartItems) {\n        dispatch({\n          type: cartConstants.ADD_TO_CART_SUCCESS,\n          payload: {\n            cartItems\n          }\n        });\n      }\n    }\n  };\n};\nexport { getCartItems };","map":{"version":3,"names":["axios","cartConstants","store","getCartItems","dispatch","type","ADD_TO_CART_REQUEST","res","post","status","cartItems","data","console","log","ADD_TO_CART_SUCCESS","payload","error","removeCartItem","REMOVE_CART_ITEM_REQUEST","REMOVE_CART_ITEM_SUCCESS","REMOVE_CART_ITEM_FAILURE","addToCart","product","getState","cart","qty","_id","parseInt","newQty","ADD_TO_CART","updateCart","auth","localStorage","getItem","JSON","parse","authenticate","removeItem","Object","keys","map","key","index","quantity","length"],"sources":["C:/Users/jitta/MERN-ECOMMERCE/flipkart-clone/src/actions/cart.action.js"],"sourcesContent":["import axios from \"../helpers/axios\";\r\nimport { cartConstants } from \"./constants\";\r\nimport store from \"../store\";\r\n\r\nconst getCartItems = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: cartConstants.ADD_TO_CART_REQUEST });\r\n      const res = await axios.post(`/user/getCartItems`);\r\n      if (res.status === 200) {\r\n        const { cartItems } = res.data;\r\n        console.log({ getCartItems: cartItems });\r\n        if (cartItems) {\r\n          dispatch({\r\n            type: cartConstants.ADD_TO_CART_SUCCESS,\r\n            payload: { cartItems },\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\n/* export const addToCart = (product, newQty = 1) => {\r\n  return async (dispatch) => {\r\n    const {\r\n      cart: { cartItems },\r\n      auth,\r\n    } = store.getState();\r\n    //console.log('action::products', products);\r\n    //const product = action.payload.product;\r\n    //const products = state.products;\r\n    const qty = cartItems[product._id]\r\n      ? parseInt(cartItems[product._id].qty + newQty)\r\n      : 1;\r\n    cartItems[product._id] = {\r\n      ...product,\r\n      qty,\r\n    };\r\n\r\n    if (auth.authenticate) {\r\n      dispatch({ type: cartConstants.ADD_TO_CART_REQUEST });\r\n      const payload = {\r\n        // cartItems: Object.keys(cartItems).map((key, index) => {\r\n        //     return {\r\n        //         quantity: cartItems[key].qty,\r\n        //         product: cartItems[key]._id\r\n        //     }\r\n        // })\r\n        cartItems: [\r\n          {\r\n            product: product._id,\r\n            quantity: qty,\r\n          },\r\n        ],\r\n      };\r\n      console.log(payload);\r\n      const res = await axios.post(`/user/cart/addtocart`, payload);\r\n      console.log(res);\r\n      if (res.status === 201) {\r\n        dispatch(getCartItems());\r\n      }\r\n    } else {\r\n      localStorage.setItem(\"cart\", JSON.stringify(cartItems));\r\n    }\r\n\r\n    console.log(\"addToCart::\", cartItems);\r\n\r\n    dispatch({\r\n      type: cartConstants.ADD_TO_CART_SUCCESS,\r\n      payload: { cartItems },\r\n    });\r\n  };\r\n};\r\n */\r\n\r\nexport const removeCartItem = (payload) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: cartConstants.REMOVE_CART_ITEM_REQUEST });\r\n      const res = await axios.post(`/user/cart/removeItem`, { payload });\r\n      if (res.status === 202) {\r\n        dispatch({ type: cartConstants.REMOVE_CART_ITEM_SUCCESS });\r\n        dispatch(getCartItems());\r\n      } else {\r\n        const { error } = res.data;\r\n        dispatch({\r\n          type: cartConstants.REMOVE_CART_ITEM_FAILURE,\r\n          payload: { error },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const addToCart = (product) => {\r\n  return async dispatch => { \r\n    const {cartItems} = store.getState().cart;\r\n    const qty = cartItems[product._id]\r\n      ? parseInt(cartItems[product._id].qty + newQty)\r\n      : 1;\r\n    cartItems[product._id] = { \r\n      ...product, \r\n      qty\r\n    }\r\n    dispatch({ \r\n      type:cartConstants.ADD_TO_CART, \r\n      payload: {\r\n        cartItems: {[product._id]:product}\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const updateCart = () => {\r\n  return async (dispatch) => {\r\n    const { auth } = store.getState();\r\n    let cartItems = localStorage.getItem(\"cart\")\r\n      ? JSON.parse(localStorage.getItem(\"cart\"))\r\n      : null;\r\n\r\n    console.log(\"upppppppppp\");\r\n\r\n    if (auth.authenticate) {\r\n      localStorage.removeItem(\"cart\");\r\n      //dispatch(getCartItems());\r\n      if (cartItems) {\r\n        const payload = {\r\n          cartItems: Object.keys(cartItems).map((key, index) => {\r\n            return {\r\n              quantity: cartItems[key].qty,\r\n              product: cartItems[key]._id,\r\n            };\r\n          }),\r\n        };\r\n        if (Object.keys(cartItems).length > 0) {\r\n          const res = await axios.post(`/user/cart/addtocart`, payload);\r\n          if (res.status === 201) {\r\n            dispatch(getCartItems());\r\n          }\r\n        }\r\n      } else {\r\n        dispatch(getCartItems());\r\n      }\r\n    } else {\r\n      if (cartItems) {\r\n        dispatch({\r\n          type: cartConstants.ADD_TO_CART_SUCCESS,\r\n          payload: { cartItems },\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport { getCartItems };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}