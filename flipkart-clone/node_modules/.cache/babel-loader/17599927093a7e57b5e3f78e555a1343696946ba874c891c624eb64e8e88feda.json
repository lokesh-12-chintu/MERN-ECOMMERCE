{"ast":null,"code":"import axios from 'axios';\nimport { api } from \"../urlConfig\";\nimport store from '../store';\nconst token = window.localStorage.getItem('token');\nconst axiosInstance = axios.create({\n  baseURL: api,\n  headers: {\n    'Athorization': token ? `Bearer ${token}` : ''\n  }\n});\naxiosInstance.interceptors.request.use(req => {\n  const {\n    auth\n  } = store.getState();\n  if (auth.token) {\n    req.headers.Authorization = `Bearer ${auth.token}`;\n  }\n  return req;\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","api","store","token","window","localStorage","getItem","axiosInstance","create","baseURL","headers","interceptors","request","use","req","auth","getState","Authorization"],"sources":["C:/Users/jitta/MERN-ECOMMERCE/flipkart-clone/src/helpers/axios.js"],"sourcesContent":["import axios from 'axios'\r\nimport {api} from \"../urlConfig\"\r\nimport store from '../store'\r\n\r\nconst token = window.localStorage.getItem('token');\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL:api,\r\n    headers:{\r\n        'Athorization':token ? `Bearer ${token}`: ''\r\n    }\r\n   \r\n});\r\n\r\n\r\naxiosInstance.interceptors.request.use((req) => { \r\n    const {auth} = store.getState(); \r\n    if(auth.token) { \r\n        req.headers.Authorization = `Bearer ${auth.token}`\r\n    }\r\n    return req;\r\n})\r\n\r\nexport default axiosInstance"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,GAAG,QAAO,cAAc;AAChC,OAAOC,KAAK,MAAM,UAAU;AAE5B,MAAMC,KAAK,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AAElD,MAAMC,aAAa,GAAGP,KAAK,CAACQ,MAAM,CAAC;EAC/BC,OAAO,EAACR,GAAG;EACXS,OAAO,EAAC;IACJ,cAAc,EAACP,KAAK,GAAI,UAASA,KAAM,EAAC,GAAE;EAC9C;AAEJ,CAAC,CAAC;AAGFI,aAAa,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,GAAG,IAAK;EAC5C,MAAM;IAACC;EAAI,CAAC,GAAGb,KAAK,CAACc,QAAQ,CAAC,CAAC;EAC/B,IAAGD,IAAI,CAACZ,KAAK,EAAE;IACXW,GAAG,CAACJ,OAAO,CAACO,aAAa,GAAI,UAASF,IAAI,CAACZ,KAAM,EAAC;EACtD;EACA,OAAOW,GAAG;AACd,CAAC,CAAC;AAEF,eAAeP,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}