{"ast":null,"code":"import axios from \"../helpers/axios\";\nimport { cartConstants } from \"./constants\";\nimport store from \"../store\";\nexport const addToCart = (product, newQty = 1) => {\n  return async dispatch => {\n    const {\n      cart: {\n        cartItems\n      },\n      auth\n    } = store.getState();\n    //console.log('action::products', products);\n    //const product = action.payload.product;\n    //const products = state.products;\n    const qty = cartItems[product._id] ? parseInt(cartItems[product._id].qty + newQty) : 1;\n    cartItems[product._id] = {\n      ...product,\n      qty\n    };\n    if (auth.authenticate) {\n      dispatch({\n        type: cartConstants.ADD_TO_CART_REQUEST\n      });\n      const payload = {\n        // cartItems: Object.keys(cartItems).map((key, index) => {\n        //     return {\n        //         quantity: cartItems[key].qty,\n        //         product: cartItems[key]._id\n        //     }\n        // })\n        cartItems: [{\n          product: product._id,\n          quantity: qty\n        }]\n      };\n      console.log(payload);\n      const res = await axios.post(`/user/cart/addtocart`, payload);\n      console.log(res);\n      if (res.status === 201) {\n        dispatch(getCartItems());\n      }\n    } else {\n      localStorage.setItem(\"cart\", JSON.stringify(cartItems));\n    }\n    console.log(\"addToCart::\", cartItems);\n    dispatch({\n      type: cartConstants.ADD_TO_CART_SUCCESS,\n      payload: {\n        cartItems\n      }\n    });\n  };\n};\nexport const updateCart = () => {\n  return async dispatch => {\n    const {\n      auth\n    } = store.getState();\n    let cartItems = localStorage.getItem(\"cart\") ? JSON.parse(localStorage.getItem(\"cart\")) : null;\n    console.log(\"upppppppppp\");\n    if (auth.authenticate) {\n      localStorage.removeItem(\"cart\");\n      //dispatch(getCartItems());\n      if (cartItems) {\n        const payload = {\n          cartItems: Object.keys(cartItems).map((key, index) => {\n            return {\n              quantity: cartItems[key].qty,\n              product: cartItems[key]._id\n            };\n          })\n        };\n        if (Object.keys(cartItems).length > 0) {\n          const res = await axios.post(`/user/cart/addtocart`, payload);\n          if (res.status === 201) {\n            dispatch(getCartItems());\n          }\n        }\n      } else {\n        dispatch(getCartItems());\n      }\n    } else {\n      if (cartItems) {\n        dispatch({\n          type: cartConstants.ADD_TO_CART_SUCCESS,\n          payload: {\n            cartItems\n          }\n        });\n      }\n    }\n  };\n};\nconst getCartItems = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: cartConstants.ADD_TO_CART_REQUEST\n      });\n      const res = await axios.post(`/user/getCartItems`);\n      if (res.status === 200) {\n        const {\n          cartItems\n        } = res.data;\n        console.log({\n          getCartItems: cartItems\n        });\n        if (cartItems) {\n          dispatch({\n            type: cartConstants.ADD_TO_CART_SUCCESS,\n            payload: {\n              cartItems\n            }\n          });\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const removeCartItem = payload => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: cartConstants.REMOVE_CART_ITEM_REQUEST\n      });\n      const res = await axios.post(`/user/cart/removeItem`, {\n        payload\n      });\n      if (res.status === 202) {\n        dispatch({\n          type: cartConstants.REMOVE_CART_ITEM_SUCCESS\n        });\n        dispatch(getCartItems());\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: cartConstants.REMOVE_CART_ITEM_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport { getCartItems };","map":{"version":3,"names":["axios","cartConstants","store","addToCart","product","newQty","dispatch","cart","cartItems","auth","getState","qty","_id","parseInt","authenticate","type","ADD_TO_CART_REQUEST","payload","quantity","console","log","res","post","status","getCartItems","localStorage","setItem","JSON","stringify","ADD_TO_CART_SUCCESS","updateCart","getItem","parse","removeItem","Object","keys","map","key","index","length","data","error","removeCartItem","REMOVE_CART_ITEM_REQUEST","REMOVE_CART_ITEM_SUCCESS","REMOVE_CART_ITEM_FAILURE"],"sources":["C:/Users/jitta/MERN-ECOMMERCE/flipkart-clone/src/actions/cart.action.js"],"sourcesContent":["import axios from \"../helpers/axios\";\r\nimport { cartConstants } from \"./constants\";\r\nimport store from \"../store\";\r\n\r\n\r\nexport const addToCart = (product, newQty = 1) => {\r\n  return async (dispatch) => {\r\n    const {\r\n      cart: { cartItems },\r\n      auth,\r\n    } = store.getState();\r\n    //console.log('action::products', products);\r\n    //const product = action.payload.product;\r\n    //const products = state.products;\r\n    const qty = cartItems[product._id]\r\n      ? parseInt(cartItems[product._id].qty + newQty)\r\n      : 1;\r\n    cartItems[product._id] = {\r\n      ...product,\r\n      qty,\r\n    };\r\n\r\n    if (auth.authenticate) {\r\n      dispatch({ type: cartConstants.ADD_TO_CART_REQUEST });\r\n      const payload = {\r\n        // cartItems: Object.keys(cartItems).map((key, index) => {\r\n        //     return {\r\n        //         quantity: cartItems[key].qty,\r\n        //         product: cartItems[key]._id\r\n        //     }\r\n        // })\r\n        cartItems: [\r\n          {\r\n            product: product._id,\r\n            quantity: qty,\r\n          },\r\n        ],\r\n      };\r\n      console.log(payload);\r\n      const res = await axios.post(`/user/cart/addtocart`, payload);\r\n      console.log(res);\r\n      if (res.status === 201) {\r\n        dispatch(getCartItems());\r\n      }\r\n    } else {\r\n      localStorage.setItem(\"cart\", JSON.stringify(cartItems));\r\n    }\r\n\r\n    console.log(\"addToCart::\", cartItems);\r\n\r\n    dispatch({\r\n      type: cartConstants.ADD_TO_CART_SUCCESS,\r\n      payload: { cartItems },\r\n    });\r\n  };\r\n};\r\n\r\n\r\nexport const updateCart = () => {\r\n  return async (dispatch) => {\r\n    const { auth } = store.getState();\r\n    let cartItems = localStorage.getItem(\"cart\")\r\n      ? JSON.parse(localStorage.getItem(\"cart\"))\r\n      : null;\r\n\r\n    console.log(\"upppppppppp\");\r\n\r\n    if (auth.authenticate) {\r\n      localStorage.removeItem(\"cart\");\r\n      //dispatch(getCartItems());\r\n      if (cartItems) {\r\n        const payload = {\r\n          cartItems: Object.keys(cartItems).map((key, index) => {\r\n            return {\r\n              quantity: cartItems[key].qty,\r\n              product: cartItems[key]._id,\r\n            };\r\n          }),\r\n        };\r\n        if (Object.keys(cartItems).length > 0) {\r\n          const res = await axios.post(`/user/cart/addtocart`, payload);\r\n          if (res.status === 201) {\r\n            dispatch(getCartItems());\r\n          }\r\n        }\r\n      } else {\r\n        dispatch(getCartItems());\r\n      }\r\n    } else {\r\n      if (cartItems) {\r\n        dispatch({\r\n          type: cartConstants.ADD_TO_CART_SUCCESS,\r\n          payload: { cartItems },\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\n\r\n\r\nconst getCartItems = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: cartConstants.ADD_TO_CART_REQUEST });\r\n      const res = await axios.post(`/user/getCartItems`);\r\n      if (res.status === 200) {\r\n        const { cartItems } = res.data;\r\n        console.log({ getCartItems: cartItems });\r\n        if (cartItems) {\r\n          dispatch({\r\n            type: cartConstants.ADD_TO_CART_SUCCESS,\r\n            payload: { cartItems },\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\n\r\nexport const removeCartItem = (payload) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: cartConstants.REMOVE_CART_ITEM_REQUEST });\r\n      const res = await axios.post(`/user/cart/removeItem`, { payload });\r\n      if (res.status === 202) {\r\n        dispatch({ type: cartConstants.REMOVE_CART_ITEM_SUCCESS });\r\n        dispatch(getCartItems());\r\n      } else {\r\n        const { error } = res.data;\r\n        dispatch({\r\n          type: cartConstants.REMOVE_CART_ITEM_FAILURE,\r\n          payload: { error },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport {getCartItems}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}